lambda=0.2
rm(list=ls(all=TRUE))
lambda=0.2
hist(rexp(1000, lambda)
)
str(mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(1000, lambda)))
hist(mns))
str(mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(1000, lambda)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(1000, lambda)))
hist(mns)
?rexp
hist(rexp(1000, lambda)
)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(1000, lambda)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40, lambda)))
hist(mns)
summary(mns)
?"stats"
mean(mns)
var(mns)
sqrt(var(mns))
var(mns)/40
var(mns)*40
sqrt(var(mns)/40)
sqrt(5/40)
5/40
25/40
?rdatasets
str(ToothGrowth)
?ToothGrowth
plot(ToothGrowth)
summary(ToothGrowth)
rm(list=ls(all=TRUE))  ## Clear all variables
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
unique(NEI$Pollutant)
DataQ1 <- aggregate(NEI$Emissions, by = list(NEI$year), FUN= sum)
colnames(DataQ1) <- c("year","Emissions")
with(DataQ1, plot(year , Emissions, main = "Emissions of PM2.5 in tons by year", type = "l"))
with(DataQ1, points(year, Emissions, col = "blue")) # to add blue dots on the values
#Let's compute linear regression model and add this on the plot as a trendline
model <- lm(Emissions ~ year, DataQ2_2)
abline(model, lwd = 2)
model <- lm(Emissions ~ year, DataQ1)
abline(model, lwd = 2)
DataQ2 <- subset(NEI, fips == "24510")
DataQ2_2 <- aggregate(DataQ2$Emissions, by = list(DataQ2$year), FUN= sum)
colnames(DataQ2_2) <- c("year","Emissions")
with(DataQ2_2, plot(year , Emissions, main = "Emissions of PM2.5 in tons by year", type = "l"))
with(DataQ2_2, points(year, Emissions, col = "blue")) # to add blue dots on the values
#Let's compute linear regression model and add this on the plot as a trendline
model <- lm(Emissions ~ year, DataQ2_2)
abline(model, lwd = 2)
library(plyr)
DataQ3 <- ddply(NEI, .(year, type), summarise, TotalEmissions = sum(Emissions))
DataQ3$type <- factor(DataQ3$type)
library(ggplot2)
# First possibility
qplot(year, TotalEmissions, data = DataQ3, color = type, shape = type)
g <- ggplot(DataQ3, aes(year, TotalEmissions))
g + geom_point(alpha = 1/2, size = 3) + facet_grid(. ~ type) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for each type") + labs(x = "Year") + labs(y = "Total Emissions in tons")
library(plyr)
DataQ3_0 <- subset(NEI, fips == "24510")
DataQ3 <- ddply(DataQ3_0, .(year, type), summarise, TotalEmissions = sum(Emissions))
DataQ3$type <- factor(DataQ3$type)
library(ggplot2)
qplot(year, TotalEmissions, data = DataQ3, color = type, shape = type)
g <- ggplot(DataQ3, aes(year, TotalEmissions))
g + geom_point(alpha = 1/2, size = 3) + facet_grid(. ~ type) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for each type") + labs(x = "Year") + labs(y = "Total Emissions in tons")
CC.coal.indices <- grep("[Cc]oal", SCC$EI.Sector, ignore.case=T)
SCC.coal <- as.character(SCC$SCC[SCC.coal.indices])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
library(plyr)
DataQ4 <- ddply(NEI.coal, .(year), summarise, TotalEmissions = sum(Emissions))
g <- ggplot(DataQ4, aes(year, TotalEmissions))
g + geom_point(alpha = 1, size = 4) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for coal related sources") + labs(x = "Year") + labs(y = "Total Emissions in tons")
SCC.coal.indices <- grep("[Cc]oal", SCC$EI.Sector, ignore.case=T)
SCC.coal <- as.character(SCC$SCC[SCC.coal.indices])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
library(plyr)
DataQ4 <- ddply(NEI.coal, .(year), summarise, TotalEmissions = sum(Emissions))
g <- ggplot(DataQ4, aes(year, TotalEmissions))
g + geom_point(alpha = 1, size = 4) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for coal related sources") + labs(x = "Year") + labs(y = "Total Emissions in tons")
DataQ5 <- subset(NEI, fips == "24510")
DataQ5_2 <- subset(DataQ5, type == "ON-ROAD")
DataQ5_3 <- aggregate(DataQ5_2$Emissions, by = list(DataQ5_2$year), FUN= sum)
colnames(DataQ5_3) <- c("year","Emissions")
with(DataQ5_3, plot(year , Emissions, main = "Emissions of PM2.5 in Baltimore for motor vehicles in tons by year", type = "l"))
with(DataQ5_3, points(year, Emissions, col = "blue")) # to add blue dots on the values
#Let's compute linear regression model and add this on the plot as a trendline
model <- lm(Emissions ~ year, DataQ5_3)
abline(model, lwd = 2)
DataQ6 <- subset(NEI, type == "ON-ROAD")
DataQ6_2 <- subset(DataQ6, fips %in% c("24510","06037"))
DataQ6_2$fips <- gsub("24510","Baltimore", DataQ6_2$fips)
DataQ6_2$fips <- gsub("06037","Los Angeles", DataQ6_2$fips)
library(plyr)
DataQ6_3 <- ddply(DataQ6_2, .(year,fips), summarise, TotalEmissions = sum(Emissions))
colnames(DataQ6_3) <- c("year","City","TotalEmissions")
g <- ggplot(DataQ6_3, aes(year, TotalEmissions))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons")
######Other solution (facets, less prefered...)
DataQ6_3$City <- factor(DataQ6_3$City)
g <- ggplot(DataQ6_3, aes(year, TotalEmissions))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + facet_grid(. ~ City)+ geom_smooth(aes(shape = City) ,method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons")
g <- ggplot(DataQ6_3, aes(year, TotalEmissions))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_smooth(aes(shape = City) ,method="lm", se=FALSE, col="steelblue")
library(plyr)
DataQ3_0 <- subset(NEI, fips == "24510")
DataQ3 <- ddply(DataQ3_0, .(year, type), summarise, TotalEmissions = sum(Emissions))
DataQ3$type <- factor(DataQ3$type)
library(ggplot2)
g <- ggplot(DataQ3, aes(year, TotalEmissions))
g + geom_point(alpha = 1/2, size = 3) + facet_grid(. ~ type) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for each type") + labs(x = "Year") + labs(y = "Total Emissions in tons")
# The graph clearly shows, in Baltimore, a decrease in PM2.5 for Non-Road, NonPoint and On-road but an increase for Point
stat_summary(ToothGrowth)
?stat_summary\
?stat_summary
g <- ggplot(DataQ6_3, aes(year, TotalEmissions))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + facet_grid(. ~ City)+ geom_smooth(aes(shape = City) ,method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons")
g <- ggplot(DataQ6_3, aes(year, TotalEmissions))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_smooth(aes(shape = City) ,method="lm", se=FALSE, col="steelblue")
DataQ6_3
?mutate
DataQ6_Smart1 <- 	mutate(subset(DataQ6_3, City == "Baltimore"), BaseCompare = TotalEmissions/346.82*100 )
DataQ6_Smart1
DataQ6_SmartBalt <- mutate(subset(DataQ6_3, City == "Baltimore"), BaseCompare = TotalEmissions/346.82*100 )
DataQ6_SmartLA <- mutate(subset(DataQ6_3, City == "Los Angeles"), BaseCompare = TotalEmissions/3931.12*100 )
DataQ6_SmartLA
DataQ6_Smart1 = rbind(DataQ6_SmartBalt,DataQ6_SmartLA)
DataQ6_Smart1
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_smooth(aes(shape = City) ,method="lm", se=FALSE, col="steelblue")
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons")
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_line()
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_line(aes(color = City, shape = City))
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Relative emissions of PM2.5 in % compared to 1999") + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in % compared to their respective emissions in 1999 (base 100 in 1999)") + geom_line(aes(color = City, shape = City))
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Relative emissions of PM2.5 in % compared to their respective emissions in 1999 (base 100 in 1999)") + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in % compared to 1999") + geom_line(aes(color = City, shape = City))
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Relative emissions of PM2.5 in % compared to their respective emissions in 1999 (base 100 in 1999)", wrap =TRUE) + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in % compared to 1999") + geom_line(aes(color = City, shape = City))
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Evolution of emissions of PM2.5 in % compared to their respective emissions in 1999 (base 100 in 1999)") + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in %. Base 100 in 1999 for each city") + geom_line(aes(color = City))
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Changes in emissions of PM2.5 for LA and Baltimore in % compared to their respective emissions in 1999 (base 100 in 1999)") + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in %. Base 100 in 1999 for each city") + geom_line(aes(color = City))
subset(DataQ6_3, City == "Baltimore" & year == 1999)
subset(DataQ6_3, City == "Baltimore" & year == 1999)$TotalEmissions
BaltBase1999 <- subset(DataQ6_3, City == "Baltimore" & year == 1999)$TotalEmissions
LABase1999 <- subset(DataQ6_3, City == "Los Angeles" & year == 1999)$TotalEmissions
subset(DataQ6_3, City == "Baltimore" & year == 1999)$TotalEmissions
DataQ6_SmartBalt <- mutate(subset(DataQ6_3, City == "Baltimore"), BaseCompare = TotalEmissions/BaltBase1999*100 )
DataQ6_SmartLA <- mutate(subset(DataQ6_3, City == "Los Angeles"), BaseCompare = TotalEmissions/LABase1999*100 )
DataQ6_Smart1 = rbind(DataQ6_SmartBalt,DataQ6_SmartLA)
DataQ6_Smart1
unique(NEI$Pollutant)
DataQ1 <- aggregate(NEI$Emissions, by = list(NEI$year), FUN= sum)
colnames(DataQ1) <- c("year","Emissions")
with(DataQ1, plot(year , Emissions, main = "Emissions of PM2.5 in tons by year", type = "l"))
with(DataQ1, points(year, Emissions, col = "blue")) # to add blue dots on the values
# The graph clearly shows a decrease in PM2.5 over time for all sources in whole country
with(DataQ1, plot(year , Emissions, main = "Total emissions of PM2.5 in tons by year in USA from 1999 to 2008 ", type = "l"))
with(DataQ1, points(year, Emissions, col = "blue")) # to add blue dots on the values
# The graph clearly shows a decrease in PM2.5 over time for all sources in whole country
DataQ2 <- subset(NEI, fips == "24510")
DataQ2_2 <- aggregate(DataQ2$Emissions, by = list(DataQ2$year), FUN= sum)
colnames(DataQ2_2) <- c("year","Emissions")
with(DataQ2_2, plot(year , Emissions, main = "Emissions of PM2.5 in tons by year", type = "l"))
with(DataQ2_2, points(year, Emissions, col = "blue")) # to add blue dots on the values
# The graph clearly shows a decrease in PM2.5 in 2002 and 2008 with an increase in 2005 for all sources in Baltimore
DataQ2 <- subset(NEI, fips == "24510")
DataQ2_2 <- aggregate(DataQ2$Emissions, by = list(DataQ2$year), FUN= sum)
colnames(DataQ2_2) <- c("year","Emissions")
with(DataQ2_2, plot(year , Emissions, main = "Emissions of PM2.5 in tons by year in Baltimore", type = "l"))
with(DataQ2_2, points(year, Emissions, col = "blue")) # to add blue dots on the values
# The graph clearly shows a decrease in PM2.5 in 2002 and 2008 with an increase in 2005 for all sources in Baltimore
DataQ2 <- subset(NEI, fips == "24510")
DataQ2_2 <- aggregate(DataQ2$Emissions, by = list(DataQ2$year), FUN= sum)
colnames(DataQ2_2) <- c("year","Emissions")
with(DataQ2_2, plot(year , Emissions, main = "Evolution of emissions of PM2.5 in tons by year in Baltimore", type = "l"))
with(DataQ2_2, points(year, Emissions, col = "blue")) # to add blue dots on the values
# The graph clearly shows a decrease in PM2.5 in 2002 and 2008 with an increase in 2005 for all sources in Baltimore
library(plyr)
DataQ3_0 <- subset(NEI, fips == "24510")
DataQ3 <- ddply(DataQ3_0, .(year, type), summarise, TotalEmissions = sum(Emissions))
DataQ3$type <- factor(DataQ3$type)
library(ggplot2)
g <- ggplot(DataQ3, aes(year, TotalEmissions))
g + geom_point(alpha = 1/2, size = 3) + facet_grid(. ~ type) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for each type in Baltimore") + labs(x = "Year") + labs(y = "Total Emissions in tons")
# The graph clearly shows, in Baltimore, a decrease in PM2.5 for Non-Road, NonPoint and On-road but an increase for Point
SCC.coal.indices <- grep("[Cc]oal", SCC$EI.Sector, ignore.case=T)
SCC.coal <- as.character(SCC$SCC[SCC.coal.indices])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
library(plyr)
DataQ4 <- ddply(NEI.coal, .(year), summarise, TotalEmissions = sum(Emissions))
g <- ggplot(DataQ4, aes(year, TotalEmissions))
g + geom_point(alpha = 1, size = 4) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for coal related sources") + labs(x = "Year") + labs(y = "Total Emissions in tons")
# The graph clearly shows a sharp decrease in emissions especially in 2008 from coal combustion related sources.
SCC.coal.indices <- grep("[Cc]oal", SCC$EI.Sector, ignore.case=T)
SCC.coal <- as.character(SCC$SCC[SCC.coal.indices])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
library(plyr)
DataQ4 <- ddply(NEI.coal, .(year), summarise, TotalEmissions = sum(Emissions))
g <- ggplot(DataQ4, aes(year, TotalEmissions))
g + geom_point(alpha = 1, size = 4) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for coal related sources") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_line(aes(color = City))
# The graph clearly shows a sharp decrease in emissions especially in 2008 from coal combustion related sources.
SCC.coal.indices <- grep("[Cc]oal", SCC$EI.Sector, ignore.case=T)
SCC.coal <- as.character(SCC$SCC[SCC.coal.indices])
NEI.coal <- NEI[NEI$SCC %in% SCC.coal,]
library(plyr)
DataQ4 <- ddply(NEI.coal, .(year), summarise, TotalEmissions = sum(Emissions))
g <- ggplot(DataQ4, aes(year, TotalEmissions))
g + geom_point(alpha = 1, size = 4) + geom_smooth(method="lm", se=FALSE, col="steelblue")+ theme_bw(base_family = "", base_size = 10) + labs(title = "Emissions of PM2.5 in tons by year for coal related sources") + labs(x = "Year") + labs(y = "Total Emissions in tons") + geom_line()
# The graph clearly shows a sharp decrease in emissions especially in 2008 from coal combustion related sources.
DataQ5 <- subset(NEI, fips == "24510") # subset keeps Baltimore
DataQ5_2 <- subset(DataQ5, type == "ON-ROAD") # subset keeps On-road to match motor vehicle sources
DataQ5_3 <- aggregate(DataQ5_2$Emissions, by = list(DataQ5_2$year), FUN= sum)
colnames(DataQ5_3) <- c("year","Emissions")  # put nice colnames
with(DataQ5_3, plot(year , Emissions, main = "Emissions of PM2.5 in Baltimore for motor vehicles in tons by year", type = "l"))
with(DataQ5_3, points(year, Emissions, col = "blue")) # to add blue dots on the values
#Let's compute linear regression model and add this on the plot as a trendline
model <- lm(Emissions ~ year, DataQ5_3)
abline(model, lwd = 2)
with(DataQ5_3, plot(year , Emissions, main = "Emissions of PM2.5 in Baltimore for motor vehicles in tons by year", type = "l"))
with(DataQ5_3, points(year, Emissions, col = "blue")) # to add blue dots on the values
#Let's compute linear regression model and add this on the plot as a trendline
model <- lm(Emissions ~ year, DataQ5_3)
abline(model, lwd = 1)
with(DataQ5_3, plot(year , Emissions, main = "Emissions of PM2.5 in Baltimore for motor vehicles in tons by year", type = "l"))
with(DataQ5_3, points(year, Emissions, col = "blue")) # to add blue dots on the values
DataQ6 <- subset(NEI, type == "ON-ROAD")
DataQ6_2 <- subset(DataQ6, fips %in% c("24510","06037"))
DataQ6_2$fips <- gsub("24510","Baltimore", DataQ6_2$fips)
DataQ6_2$fips <- gsub("06037","Los Angeles", DataQ6_2$fips)
library(plyr)
DataQ6_3 <- ddply(DataQ6_2, .(year,fips), summarise, TotalEmissions = sum(Emissions))
colnames(DataQ6_3) <- c("year","City","TotalEmissions")
# extract the value of emission of both cities in 1999
BaltBase1999 <- subset(DataQ6_3, City == "Baltimore" & year == 1999)$TotalEmissions
LABase1999 <- subset(DataQ6_3, City == "Los Angeles" & year == 1999)$TotalEmissions
subset(DataQ6_3, City == "Baltimore" & year == 1999)$TotalEmissions
#Now we add a column that contains the relative percentage of emissions (BaseCompare) of each city compared to their emission in year 1999:
DataQ6_SmartBalt <- mutate(subset(DataQ6_3, City == "Baltimore"), BaseCompare = TotalEmissions/BaltBase1999*100 )
DataQ6_SmartLA <- mutate(subset(DataQ6_3, City == "Los Angeles"), BaseCompare = TotalEmissions/LABase1999*100 )
# We put back together the Data of both cities:
DataQ6_Smart1 = rbind(DataQ6_SmartBalt,DataQ6_SmartLA)
# Then we plot:
g <- ggplot(DataQ6_Smart1, aes(year, BaseCompare))
g + geom_point(aes(color = City, shape = City), alpha = 1, size = 4) + theme_bw(base_family = "", base_size = 10) + labs(title = "Changes in emissions of PM2.5 for LA and Baltimore in % compared to their respective emissions in 1999 (base 100 in 1999)") + labs(x = "Year") + labs(y = "Relative emissions of PM2.5 in %. Base 100 in 1999 for each city") + geom_line(aes(color = City))
# With this graph it is easy to conclude that Baltimore emissions dropped by 75% while L.A. emissions slightly increased since 1999
install.packages("Rserve")
library(Rserve);Rserve90
library(Rserve);Rserve()
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("Rtools")
install.packages("Rcpp")
require(devtools)
find_rtools()
install_github('rCharts', 'ramnathv')
install_github('ramnathv/rCharts')
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
?"manipulate"
manipulate(plot(1:x), x = slider(5, 10))
plot(cars, xlim=c(x.min,x.max)),
x.min=slider(0,15),
x.max=slider(15,30))
plot(cars, xlim=c(x.min,x.max)),x.min=slider(0,15),x.max=slider(15,30))
manipulate(
plot(cars, xlim=c(x.min,x.max)),
x.min=slider(0,15),
x.max=slider(15,30))
manipulate(
barplot(as.matrix(longley[,factor]),
beside = TRUE, main = factor),
factor = picker("GNP", "Unemployed", "Employed"))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
?dTable
library("Rcharts")
require(devtools)
dTable(airquality, sPaginationType = "full_numbers")
require(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
install.packages("shiny")
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text')
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2("Big text")
h3("Sidebar")
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h3('Big text')
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h3('Big text'),
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2("Big text"),
h3("Sidebar")
),
mainPanel(
h3('Main Panel text')
)
))
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2("Big text"),
h3("Sidebar")
),
mainPanel(
h3('Main Panel text')
)
))
library(swirl)
swirl()
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
var(est(ols.slope,ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <-lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
esc
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
w <- c(2, 1, 3, 1)
sum(x)/sum(w)
sum(w*x)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
linear1 <- lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y~x)
fitL <- lm(y~x)
fitL$coefficients
data(mtcars)
head(mtcars)
?lm
fitL <- lm(y~x-1)
fitL$coefficients
fitL <- lm(mpg~wt,mtcars)
fitL$coefficients
1.5*0.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fitL <- lm(y~x)
fitL$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42) y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42) y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
lm(y~x)
data(mtcars)
fitL <- lm(mpg~factor(cyl)+wt,mtcars)
fitL$coefficients
mtcars$cyl
?refactor
?relevel
mtCyl <- relevel(mtcars$cyl,8)
mtCyl <- relevel(factor(mtcars$cyl),8)
factor(mtcars$cyl)
mtCyl <- relevel(factor(mtcars$cyl),"8")
mtCyl
fitL <- lm(mtcars$mpg~factor(mtCyl)+wt)
fitL <- lm(mtcars$mpg~factor(mtCyl)+mtcars$wt)
fitL$coefficients
fitL <- lm(mpg~factor(cyl),mtcars)
fitL$coefficients
fitL <- lm(mpg~factor(cyl)*wt,mtcars)
fitL$coefficients
fitL <- lm(mpg~factor(cyl)*wt,mtcars)
summary(fitL)
fitL <- lm(mpg~factor(cyl)+wt,mtcars)
summary(fitL)
3.594e-11/2.258e-10
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fitL <- lm(y~x)
hatvalues(fitL)
?hatvalues
influence.measures(fitL)
?hatvalues
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fitL <- lm(y~x)
influence.measures(fitL)
coucou<-publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
coucou<-"publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")"
library(slidify)
?setwd
getwd
getwd()
setwd("D:\Documents\DataScience\DataScience\DataProductShiny")
setwd("\DataScience\DataProductShiny")
setwd("D:/Documents/DataScience/DataScience/DataProductShiny")
getwd()
publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
1
publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
?publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
publish_github(9_DeveloppingDataProducts, username = getOption("github.user"))
publish_github("9_DeveloppingDataProducts", username = getOption("github.user"))
publish_github("9_DeveloppingDataProducts", username = getOption("github.user"), mode("selfcontained"))
publish_github("9_DeveloppingDataProducts", username = getOption("github.user"), mode="selfcontained")
publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
getwd
getwd()
setwd("D:/Documents/DataScience/DataScience/DataProductShiny/mydeck")
publish(user = "WilliamThoreau", repo = "9_DeveloppingDataProducts")
